%li.row{:id => "comment-#{comment.id}-content", :class => "comment-content #{is_child_comment?(comment)}"}
  .cell.img
    = image_tag comment.user.photo_url(:comment)
  .cell.comm
    = link_to comment.user.name, profile_path(comment.user)
    \- 
    = comment_or_hidden comment
    .comm-ft
      .fl
        = "#{time_ago_in_words(comment.created_at)} ago"
        \|
        - if belongs_to_current_user?(comment) && !comment.hidden?
          = link_to "delete", comment_path(object_type(commentable),  commentable.id, comment.id), :'data-commentid' => comment.id, :class => 'comment-delete-link', :remote => true, :'data-method' => :delete, :format => :js 
        - if user_signed_in? && !comment.hidden?
          = link_to "reply", "#", :class => "reply-comment", :comment_id => "#{comment.id}"
          %div{:id => "comment-#{comment.id}-reply", :style => "display:none" }
            = comment_form_for commentable, comment.id
          = link_to "share", comment_post_to_facebook_path(comment.id, :link => item_url(commentable.id).concat("#comment-#{comment.id}-content")), :remote => true
          = link_to "tweet", comment_post_to_twitter_path(comment.id, :link => item_url(commentable.id).concat("#comment-#{comment.id}-content")), :remote => true
        .loading.fr{:style => "display:none"}

  .clear

  - if comment.has_children?
    %ul.comms
      = render :partial => "comments/comment", :collection => comment.children, :as => :comment, :locals => { :commentable => commentable }
.clear
