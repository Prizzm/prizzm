- content_for :page_style do
  = include_stylesheets :case_detail

#content.grid_14
  %section#case
    = privacy_control_for @case
    .title= @case.title
    = link_to "Edit Issue", "#", :class => "edit-cntrl", :id => "edit-review-link"
    #rendered-review
      = raw @case.description
    .ftnote
      = @case.updated_at.strftime '%A, %B %d, %Y at %I:%M %p'
      \|
      = link_to 'delete', case_path(@case), :method => :delete if (@case.user == current_user)
    #review-editor
      = form_for @case, :remote => true, :method => :put do |f|
        = f.text_area :description
        .buttons
          = f.submit "clear", :class => "button", :id => "clear_item_fields"
          = f.submit 'Save'
        .clear
    #review_status 
    = form_for @case, :remote => true, :method => 'PUT' do |f|
      = f.text_field :tag_list, :placeholder => "+ Add Tags", :title => "+Add Tags", :class => "jq_watermark"
    %ul.notes
      - @case.notebook.notes.each do |note|
        = render :partial => 'cases/note', :locals => {:note => note}
    = form_for @case.notebook.notes.new, :url => case_notes_path(@case), :remote => true, :html => {:class => "addNote"} do |f|
      = f.text_field :body, :placeholder => "Add note", :title => "Add note", :class => 'jq_watermark'
      %ul.sharebts
        Share to 
        %li.sharebt.fb
          facebook
          .close
        %li.sharebt.twitter
          twitter
          .close
      = f.submit "add", :class => "button blue"
      .clear
    .clear

  %ul.comms.comments_root
    = comment_collection_for @case
    .clear
  %section#new-comment
    = comment_form_for @case

%aside.grid_6
  %article
    %h4 Share
    = form_tag case_post_to_facebook_path(@case), :remote => true, :class => "table", :id => "form-ask-friend" do
      .row
        .cell
          = text_field_tag :message, "", :placeholder => "Message"
          = hidden_field_tag :link, case_url(@case)
      .row
        .cell.left Share to
        .cell.right
          %ul.sharebts
            %li.sharebt.fb.active
              facebook
              .close
            %li.sharebt.twitter
              twitter
              .close
      = link_to "Share", "#", :id => 'button-ask-friend', :class => "button green fr"
      .loading{:style => "display:none;float:left"}
       

- content_for :javascripts do
  = javascript_include_tag 'ckeditor/ckeditor.js'

  :javascript

    $(document).ready(function() {

      #{render 'tags/taggable.js.erb', :taggable => @case} 


      $('.note_body').editable(function(value, settings){
        var note_id = $(this).closest('li').attr('id');
        var update_note_path = "#{case_notes_path(@case)}/" + note_id;
        $.ajax({
          type: "PUT",
          url: update_note_path,
          data: {note: {body: value}}
        });
        return value;
      }, {
        indicator : "Saving...",
        type      : "textarea",
        submit    : 'save',
        method    : 'PUT',
        cancel    : 'cancel',
        tooltip   : "Click to edit this note...",
        onblur    : "submit",
        name      : "review",
        cssclass  : "review-input"
      });

      if (document.location.hash === "#write_review"){
      }

      if (document.location.hash === '#edit_issue') {
        editIssue();
      }
      

      $('li.note').delegate('a', 'click', function(){
        //var note_body = $(this).find('note-body');        
        var li_element = $(this).closest('li');
        var note_id = li_element.attr('id');
      li_element.find('.note_body').trigger('click.editable');
      });

      var editor;

      function showEditor(box){
        editor = CKEDITOR.replace(box,{                   //refactor point
          startupFocus: true, 
          customConfig: '/javascripts/ckeditor_custom/case_review_config.js' 
        });
      }

      function editIssue() {
        showEditor('case_description');
        $('#rendered-review').hide();
        $('form#note_new').hide();
        $('#review-editor').show();
      }

      $('#edit-review-link').click(function(){
        editIssue();
      });


      //  Submit the case issue via ajax - handle server response
      $('form.edit_case').live('ajax:success', function(event, data, status, xhr){
        var editor_data = CKEDITOR.instances.case_description.getData();  //refactor point
        $('#rendered-review').html(editor_data);
        $('#rendered-review').show();
        $('form.edit_case textarea').val(editor_data);                    //refactor point
        $('#review-editor').hide();
        $('form#note_new').show();
        editor.destroy();
      });

      // Submitting a new note via ajax - handle server response
      $('form#new_note').live('ajax:success', function(event, data, status, xhr){
        $('ul.notes').append(xhr.responseText);
        $('ul.notes:last-child').effect('highlight', {}, 2000);
        $('#note_body').val('')
      });

      $('ul.notes').delegate('a', 'ajax:success', function(event, data, status, xhr){
        var noteid = data + '';
        console.log('Noteid: '+noteid);
        $('#' + noteid).fadeOut();
      });
    });
