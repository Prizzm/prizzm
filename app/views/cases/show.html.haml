- content_for :page_style do
  = stylesheet_link_tag 'jquery.wysiwyg.css'
  = include_stylesheets :case_detail
  = stylesheet_link_tag 'twilio.css'
  = javascript_include_tag "http://static.twilio.com/libs/twiliojs/1.0/twilio.min.js"

  %span#twilio_name(style="display:none")= @cap_name.to_s
  %span#case_id(style="display:none")= @case.id.to_s

#content.grid_14
  %section#case
    .title= @case.title
    = link_to "Call", "#", :class => "twiliocall button", :id => "call"
    = link_to "Edit Issue", "#", :class => "edit-cntrl", :id => "edit-review-link"
    #rendered-review
      = html_clean @case.description


    #review-editor
      = form_for @case, :remote => true, :method => :put do |f|
        = f.text_area :description, :cols => 59
        .buttons.fr
          = f.submit 'Save', :class => "green button"
          = f.submit "cancel", :class => "button", :id => "clear_item_fields"
        .clear
        
    #review_status 
    = form_for @case, :remote => true, :method => 'PUT' do |f|
      = f.text_field :tag_list, :placeholder => "+ Add Tags"
    %ul.notes
      - @case.notebook.notes.each do |note|
        = render :partial => 'cases/note', :locals => {:note => note}
    = form_for @case.notebook.notes.new, :url => case_notes_path(@case), :remote => true, :html => {:class => "addNote"} do |f|
      = f.text_field :body, :placeholder => "Add note"
      = f.submit "add", :class => "button blue"
      .clear
    .clear
    
    %p
      Call prizzm for support 
      %span{:id => "prizm_phone", :class => "phone_number"}= "+14155773411"
    
    
    #footerbit
      = @case.updated_at.strftime '%A, %B %d, %Y at %I:%M %p'
      \|
      = link_to 'delete', case_path(@case), :method => :delete if (@case.user == current_user)
      = privacy_control_for @case

  %ul.comms.comments_root
    = comment_collection_for @case
    .clear
  %section#new-comment
    = comment_form_for @case

%aside.grid_6
  %article
    %h4 Ask your friends for help
    = form_tag case_post_to_facebook_path(@case), :remote => true, :class => "table", :id => "form-ask-friend" do
      = text_field_tag :message, "", :placeholder => "Message"
      %ul.finalstep.buttons.fr
        %li.fb{:title => "post to facebook"}
          / facebook checkbox goes here
        %li.tt
          / twitter checkbox goes here
        %li.privacy
          / privacy drop down goes here
        %li
          = hidden_field_tag :link, case_url(@case)
          = link_to "Share", "#", :id => 'button-ask-friend', :class => "button green"
          .loading{:style => "display:none;float:left"}
      .clear

#call-window{:style => "display:none"}
  %div#call-window-container
    #call_container
      #call_container_buttons{:style => "display:none"}
        #call_computer{:onmouseout => "this.style.backgroundColor='#A1A1A3';", :onmouseover => "this.style.backgroundColor='#4D90FE';"}
          %div
            Call from my computer
        #call_phone{:onmouseout => "this.style.backgroundColor='#A1A1A3';", :onmouseover => "this.style.backgroundColor='#4D90FE';"}
          %div
            Call me on my phone
            
      / Collect input: by computer
      #call_container_numbers_computer{:style => "display:none"}
        %div
          %form#callform_computer
            %label{:for => "number"} Enter a phone number to call
            %p{:class => 'notice'}
            %input#number{:name => "number", :type => "text"}/
            %button.button.blue Call
            
      / Collect input: by phone
      #call_container_numbers_phone{:style => "display:none"}
        %div
          %form#callform_phone{:action => "/calls", :method => "post", :style => "font-size:12px;text-align:left"}
            %p{:class => 'notice'}
            %label{:for => "from"} From
            %input#from{:name => "from", :type => "text", :value => @case.user.phone_number }/
            %label{:for => "to"} To
            %input#to{:name => "to", :type => "text" }/
            %button.button.blue Call
            
      / Info: on call
      #oncall{:style => "display:none"}
        %div
          %p{:style => "font-size: 14px;font-weight: bold;"} On call with
          %p{:style => "font-size: 16px;margin:30px 0;"}
            %span#callnumber
          %button.button.hangup{:onclick => "hangup();"} Hangup
          
      / Info: on call
      #placingcall{:style => "display:none"}
        %div
          %p{:style => "font-size: 14px;font-weight: bold;margin-bottom:40px"} Placing your call...
          %button.button{:onclick => "hangup();"} Close Window
          
      / Info: calling
      #calling{:style => "display:none"}
        %div
          %p{:style => "font-size: 14px;font-weight: bold;"} Calling...
          %p{:style => "font-size: 16px;margin:30px 0;"}
            %span#callingnumber
          %button.button{:onclick => "hangup();"} Cancel
          
    / Call container
    %div.close_call{:onclick => "close_callwindow();", :title => "Close"}
      %img{:alt => "Close", :src => "/images/close.png", :style => "z-index:2"}/       

      


- content_for :javascripts do
  = include_javascripts :wysiwyg
  

  :javascript    
  
    $(document).ready(function() {
      #{render 'tags/taggable.js.erb', :taggable => @case} 


      $('.note_body').editable(function(value, settings){
        var note_id = $(this).closest('li').attr('id');
        var update_note_path = "#{case_notes_path(@case)}/" + note_id;
        $.ajax({
          type: "PUT",
          url: update_note_path,
          data: {note: {body: value}}
        });
        return value;
      }, {
        indicator : "Saving...",
        type      : "textarea",
        submit    : 'save',
        method    : 'PUT',
        cancel    : 'cancel',
        tooltip   : "Click to edit this note...",
        onblur    : "submit",
        name      : "review",
        cssclass  : "review-input"
      });

      if (document.location.hash === "#write_review"){
      }

      if (document.location.hash === '#edit_issue') {
        editIssue();
      }
      

      $('li.note').delegate('a', 'click', function(){
        //var note_body = $(this).find('note-body');        
        var li_element = $(this).closest('li');
        var note_id = li_element.attr('id');
      li_element.find('.note_body').trigger('click.editable');
      });

      function editIssue() {
        $('#case_description').wysiwyg({
          controls: {
              bold: { visible: true },
              italic: { visible: true },
              underline: { visible: true },
              strikeThrough: { visible: true },

              justifyLeft: { visible: true },
              justifyCenter: { visible: true },
              justifyRight: { visible: true },
              justifyFull: { visible: true },

              undo: { visible: true },
              redo: { visible: true },

              insertOrderedList: { visible: true },
              insertUnorderedList: { visible: true },

              createLink: { visible: true },
              insertImage: { visible: true },

              paragraph: { visible: true },
          },
          rmUnusedControls: true
        });

        $('#rendered-review').hide();
        $('form#note_new').hide();
        $('#review-editor').show();
      }

      $('#edit-review-link').click(function(){
        editIssue();
      });


      //  Submit the case issue via ajax - handle server response
      $('form.edit_case').live('ajax:success', function(event, data, status, xhr){
        $('#rendered-review').html($('#case_description').val());
        $('#rendered-review').show();
        $('#review-editor').hide();
        $('form#note_new').show();

        $('#case_description').wysiwyg('destroy');
      });

      // Submitting a new note via ajax - handle server response
      $('form#new_note').live('ajax:success', function(event, data, status, xhr){
        $('ul.notes').append(xhr.responseText);
        $('ul.notes:last-child').effect('highlight', {}, 2000);
        $('#note_body').val('')
      });

      $('ul.notes').delegate('a', 'ajax:success', function(event, data, status, xhr){
        var noteid = data + '';
        console.log('Noteid: '+noteid);
        $('#' + noteid).fadeOut();
      });
      
      	

      //Twilio!
      Twilio.Device.setup($("#twilio_name").html());

    	Twilio.Device.ready(function (device) {
      	$("#log").text("Ready");
      });

      Twilio.Device.error(function (error) {
      	$("#log").text("Error: " + error.message);
      });

      Twilio.Device.connect(function (conn) {
      	$("#log").text("Successfully established call");

      	$("#call_container_numbers_phone").attr("style", "display:none");
      	$("#call_container_numbers_computer").attr("style", "display:none");
      	$("#calling").attr("style", "display:none");
      	$("#oncall").attr("style", "display:block");
        $("#placingcall").attr("style", "display:none");

      });

      Twilio.Device.disconnect(function (conn) {
      	$("#log").text("Call ended");
      	$("#call-window").attr("style", "display:none");
      	$("#calling").attr("style", "display:none");
      	$("#oncall").attr("style", "display:none");
        $("#placingcall").attr("style", "display:none");
      });

      Twilio.Device.incoming(function (conn) {
      	$("#log").text("Incoming connection from " + conn.parameters.From);
      	// accept the incoming connection and start two-way audio
      	conn.accept();
      });

      var call = function() {
  
       params =  { "PhoneNumber" : $("#number").val(), "CaseId" : $("#case_id").html() };
     	 Twilio.Device.connect(params);
     	 
     	 $("#callnumber").html($("#number").val());
    
      }

      var callnumber = function(number) {
      	params =  { "PhoneNumber" : number, "CaseId" : $("#case_id").html() };
      	Twilio.Device.connect(params);

      	$("#callingnumber").html(number);
      	$("#callnumber").html(number);

      	$("#call-window").attr("style", "");
      	$("#call_container_buttons").attr("style", "display:none");
      	$("#call_container_numbers_phone").attr("style", "display:none");
      	$("#call_container_numbers_computer").attr("style", "display:none");
      	$("#calling").attr("style", "display:block");
      }
 
  
    	$("#call").click(function(){

    		$("#call-window").attr("style", "");
    		$("#call_container_buttons").attr("style", "display:block");
    		$("#call_container_numbers_phone").attr("style", "display:none");
    		$("#call_container_numbers_computer").attr("style", "display:none");
    		$("#oncall").attr("style", "display:none");
    		$("#calling").attr("style", "display:none");
    		$("#placingcall").attr("style", "display:none");
    		
    		$('#callform_computer .notice').html("");
    		$('#callform_phone .notice').html("");
    	});

    	$("#call_computer").click(function(){

    		numberInput('computer');
    	});

    	$("#call_phone").click(function(){
    		numberInput('phone');
    	});

    	$('#callform_computer').submit(function(event) {
        
        var nr = $("#number").val();
        
         if(nr){
           call();
         }else{
           $('#callform_computer .notice').html("Please enter the number");
         }
    	   
    	   return false;
    	});
    	
      $.fn.serializeObject = function() {
        var values = {}
        $("form input").each( function(){
          values[this.name] = $(this).val();
        });

        return values;
      }

    	$('#callform_phone').submit(function(event) {
    	      	  
    	  var form = $(this).serializeObject();
        var from = form["from"];
      	var to = form["to"];
        event.preventDefault();
        
    	  if(from && to){
    	    $.post($(this).attr('action'), $(this).serialize(), null, "script");  
      	   return false;
    	  }else{
          $('#callform_phone .notice').html("Please fill in the fields");
    	    return false;
    	  }

    	   
    	});	

    	var numberInput = function(type){

    		$("#call_container_buttons").attr("style", "display:none");

    		if(type == "phone"){
    			$("#call_container_numbers_phone").attr("style", "display:block");
    		}else{
    			$("#call_container_numbers_computer").attr("style", "display:block");
    		}

    	}


    	$(".phone_number").mouseenter(function(){		
    		$(this).addClass("call_button");
    		$(this).attr("style", "cursor:pointer");

    		$(this).click(function(){

        	$("#callform_phone #to").attr("value", $(this).html());
        	$("#call-window").attr("style", "");
        	$("#call_container_buttons").attr("style", "display:none");
        	$("#call_container_numbers_phone").attr("style", "display:block");
        	$("#call_container_numbers_computer").attr("style", "display:none");
        	$("#oncall").attr("style", "display:none");
        	$("#calling").attr("style", "display:none");
        	$("#placingcall").attr("style", "display:none");
    			
    		});
    	});

    	$(".phone_number").mouseout(function(){		
    		$(this).removeClass("call_button");
    		$(this).attr("style", "cursor:inherit");
    	});
  
    });
    
    
    function hangup() {
     	Twilio.Device.disconnectAll();
     	$("#call-window").attr("style", "display:none");
    }

    function close_callwindow(){
     	$("#call-window").attr("style", "display:none");
    } 

      
    