= include_stylesheets :item_new

= form_for [current_user, @item], :html => {:class => 'action table addhave'} do |f|
  = f.text_field :name, :placeholder => "Add a new item"
  /%button#google_search
  #url_and_dropdown_container{:style => "position:relative;"}
    = f.text_field :url, :placeholder => "Add a URL"
    .hide#main-dropdown
      %ul#dropdown
      
  = f.hidden_field :company_id

  = f.hidden_field :product_id
  = f.hidden_field :image_url

  %p{:style => "display:none;"}= f.text_area :description, :class => "fr", :placeholder => "What did you think of this product?"
  #url_preview
    #img_selector_parent{:style => "display: block;"}
      %table.fl
        %tbody
          %tr
            %td#img_controls
              #prev_image{:disabled => "disabled"}
                = image_tag "prev_img	.png"
              #next_image{:disabled => "disabled"}
                = image_tag "next_img.png"
              .clear
          %tr
            %td#img_selector
        .clear

  = f.text_area :review, :placeholder => "Review"
  .clear
  = f.text_field :tag_list, :placeholder => "+ Add tags"
  /= text_field_tag :company_name, "", :placeholder => "Company Name"
  = f.submit "save", :class => "button blue"
  = f.submit "clear", :class => "button", :id => "clear_item_fields"


#offscreen_div
  
- content_for :javascripts do
  :javascript
    $(document).ready(function(){
      
      // http://code.drewwilson.com/entry/autosuggest-jquery-plugin
      var data = [
        {value: "have", name: "have"},
        {value: "want", name: "want"}
      ];

      $('#item_tag_list').autoSuggest("#{search_companies_path}",
        {
          preFill: "have",
          neverSubmit: true
        }
      );

      // what?
      $("#search-by-title").click(function(){
        if ($('input#item_name').val()){
          window.product_search_term = $('input#item_name').val();
          $.facebox({ ajax : "/products/static_search"});
        }
        return false;
      });
      
      // Image fetching code
      
      var image_elems = [];
      
      var current_image_indx = null;
      var total_images = 0;
      var waittimeout_timeout_id = null;

      function select_image(indx){
        current_image_indx = indx;
        $("#img_selector img").css({ "display" : "none"});
        var current_img = $("#img_selector img:nth-child(" + (current_image_indx + 1) + ")");
        current_img.css({"display" : "block"});
        $("input#item_image_url").val(current_img.attr("src"));
      }

      function toggle_navigation(){
        if (current_image_indx + 1 < total_images){
          $("#next_image").removeAttr('disabled');
        }
        else
        {
          $("#next_image").attr('disabled', 'disabled');
        }
        if (current_image_indx > 0){
          $("#prev_image").removeAttr('disabled');
        }
        else
        {
          $("#prev_image").attr('disabled', 'disabled');
        }
      }
      
      function clear_images(){
        $("#img_selector").html("");
      }
      
      function hide_all(){
        //$("#img_selector_parent").css({ 'display' : 'none' });
        $("#img_selector").html("");
      }

      function reset_all(){
        current_image_indx = null;
        total_images = 0;

        if (waittimeout_timeout_id){
          clearTimeout(waittimeout_timeout_id);
        }

        waittimeout_timeout_id = null;

        $("#img_selector_parent").css({ "display" : "block" });
        $("#img_selector").html('#{ image_tag 'loading.gif', :style => 'display:block;' }');

        toggle_navigation();
      }
      
      function append_image(image_elem){
        if (current_image_indx == null){
          $("#img_selector").html("");
        }
        image_elem.appendTo("#img_selector");
        total_images++;
        if ( current_image_indx == null ){
          select_image(0);
        }

        toggle_navigation();
      }

      function load_images(images){
        $("#img_selector").html('#{ image_tag 'loading.gif', :style => 'display:block;' }');
        
        if (images.length == 0){
          hide_all();
        }
        else
        {
          waittimeout_timeout_id = setTimeout(function(){
            // if no image appended after 5 seconds hide it
            if (!total_images || total_images <= 0){
              hide_all();
            }
            waittimeout_timeout_id = null;
          }, 5000);
        }
        
        for (var image in images){
          var new_img = $("<img src='"+ images[image] +"' />");
          new_img.appendTo("#offscreen_div");
          new_img.load(function(){
            if ($(this).width() > 50 && $(this).height() > 50){
              append_image($(this));
            }
          });
        }
      }

      $("#prev_image").click(function(){
        select_image((current_image_indx - 1 + total_images) % total_images);
        toggle_navigation();
        return false;
      });

      $("#next_image").click(function(){
        select_image((current_image_indx + 1) % total_images);
        toggle_navigation();
        return false;
      });
      
      var url_re = /(?:(?:https?):\/\/|[-A-Z0-9]+\.)(?:\([-A-Z0-9+&@#\/%=~_|$?!:;,.]*\)|[-A-Z0-9+&@#\/%=~_|$?!:;,.])*(?:\([-A-Z0-9+&@#\/%=~_|$?!:;,.]*\)|[A-Z0-9+&@#\/%=~_|$])/i;
      var last_processed_url = null;
      
      function process_url(){
      
        if ( $("input#item_url").attr('readonly') ){
          return;
        }

        var matches = $("input#item_url").val().match(url_re);

        if (!matches) {
          if (last_processed_url){
            hide_all();
          }
          return;
        }

        var url = matches[0];
        
        if (last_processed_url && last_processed_url == url){
          return;
        }
        
        last_processed_url = url;
        
        reset_all();
        
        $.post(
            '/home/scrape',
            {url: url},  
            function(json) {
              if ( !json ) { hide_all(); } // page not found
              //alert("So this is resp " + JSON.stringify(json) );
              load_images(json.images);
              //$("#debug").val(json.doc);
              //$("#page_title").html(json.title);
              //$("#page_description").html(json.description);
            },
            "json"
        );
      }

      var search_google_popup_opened = false;
      var google_search_icon_clicked = false;

      $('input#item_url').autocomplete({
        source: function(request, response) {
        
          if ($("input#item_name").val() && google_search_icon_clicked){
          
            //googleWebSearch({q:$("input#item_name").val(), resultsDiv: $("#dropdown")});
            var config = {
              type    : 'web',
              append    : false,
              perPage   : 3,      // A maximum of 8 is allowed by Google
              page    : 0       // The start page
            }
          
            // If no parameters are supplied to the function,
            // it takes its defaults from the config object above:
            
            var settings;
            
            settings = $.extend({},config,settings);
            settings.term = $("input#item_name").val();

            // URL of Google's AJAX search API
            var apiURL = 'http://ajax.googleapis.com/ajax/services/search/'+settings.type+'?v=1.0&callback=?';
            //var resultsDiv = options.resultsDiv;

            //resultsDiv.html("Searching Web");
            
            $.getJSON(apiURL,{q:settings.term,rsz:settings.perPage,start:settings.page*settings.perPage},function(r){

              var results = r.responseData.results;
              
              //alert(JSON.stringify(results));

              if (results.length){
                //alert(JSON.stringify(results));
              }
              
              var resp_data = $.map(results, function(elem, i){
                return $.extend({label:elem.url}, elem);
              });
              
              response(resp_data);

            });

          }
          
        
        },
        open : function(event, ui){
          search_google_popup_opened = true;
        },
        close:function(event, ui){
          google_search_icon_clicked = false;
          search_google_popup_opened = false;
        },
        select : function(event, ui){
          event.preventDefault();
          $("input#item_url").val(ui.item.unescapedUrl)
          $("input#item_url").change();
          return false;
        },
        minLength : 0
      }).data( "autocomplete" )._renderItem = function( ul, item ) {
        return $( "<li style='display:block;' ></li>" ).data( "item.autocomplete", item ).append("<a style='text-overflow: ellipsis;width:100%;display:block;padding:0px;margin:-1px;overflow:hidden;white-space:wrap;' class='result_item' href='"+ item.unescapedUrl +"'>" +
                                      "<span class='r_title' style='width:544px;display:inline-block;text-overflow: ellipsis;'>"+ item.titleNoFormatting +"</span><br />" +
                                      // TODO: hard-coding width to 544px since parent UL gets its width set by some javascript which disables wrapping of text
                                      "<span class='r_desc' style='width:544px;display:inline-block;'>" + item.content + "</span><br />" + //item.content
                                      "<span class='r_vurl' style='width:544px;display:inline-block;text-overflow: ellipsis;'>"+item.unescapedUrl+"</span>" +
                                      "</a>"
        ).appendTo( ul ); //.data( "item.autocomplete", item )
      };
      
      
      $(document).click(function(){
        if (search_google_popup_opened){
          $('input#item_url').autocomplete("close");
        }
      });

      $('input#item_url').focus(function(){
        if (!$(this).val() && !$(this).attr('readonly') && !search_google_popup_opened){
          if ($("input#item_name").val()){
            google_search_icon_clicked = true;
            $('input#item_url').autocomplete("search", $("input#item_name").val());
          }
        }
      });
      
      $('input#item_url').change(function(){
        process_url();
      });
      
      $('input#item_url').bind("paste", function(){
        setTimeout(function(){
          process_url();
        }, 50);
      });
      
      process_url();
      
      //autocomplete for product
      $('input#item_name').autocomplete({
        source: function(request, response) {
          $.ajax({
            url: '#{search_products_path}',
            data : {query:request.term},
            dataType: "json",
            success: function(r){
              if (r.length <= 0){
                return;
              }

              var resp_data = $.map(r, function(elem, i){
                return $.extend({label:elem.name}, elem);
              });
              
              //alert(JSON.stringify(resp_data));

              response(resp_data);
            }
          });
        },
        select:function(event, ui){
        
          $("#item_product_id").val(ui.item.id);
          
          $("#item_name").attr('readonly', 'readonly');
          $("#item_url").attr('readonly', 'readonly');
          $("#item_description").attr('readonly', 'readonly');
          

          $("#item_name").val(ui.item.name);
          $("#item_name").change();
        
          $("#item_url").val(ui.item.url);
          $("#item_url").change();
          
          $("#item_description").parent().parent().css({ display : '' });
          $("#item_description").val(ui.item.description);
          $("#item_description").change();
          
          $("#img_selector img").css({ "display" : "none"});
          var current_img = $("#img_selector img:nth-child(" + (current_image_indx + 1) + ")");
          current_img.css({"display" : "block"});
          
          var new_image = $("<img src='"+ui.item.main_image+"' />");
          append_image(new_image);
          $("#item_image_url").val(new_image.get(0).src); //ui.item.main_image);

          // set company_id
          $("#item_company_id").val(ui.item.company_id);
          
          // TODO: Also set Company name
          $("#company_name").val(ui.item.company_name); // But it is not provided in returned JSON
          $("#company_name").attr("readonly", "readonly");
        }
      }).data( "autocomplete" )._renderItem = function( ul, item ) {
        return $( "<li style='height:40px;'></li>" ).data( "item.autocomplete", item ).append( "<a style='width:100%;height:100%;display:block;padding:0;'>" + "<img style='float:left;height:38px;width:38px;' src='" + item.main_image_thumb + "'>" + "<span style='float:left;padding:10px 5px;'>" + item.label + "</span>" + "</a>" ).appendTo( ul );
      };

      $("#clear_item_fields").click(function(){
        $.facebox({
          ajax : "#{ new_item_path }"
        });
        return false;
      });
      
      $("#item_name").change(function(){
      
        // TODO: Update the review according to possession status
        var possession_status = "have";
        if ( possession_status == "want" ) {
          var review_placeholder = "Why do you want " + $('#item_name').val() + "?";
        }
        else
        {
          var review_placeholder = "What do you think of " + $('#item_name').val() + "?";
        }
        
        $('#item_review').attr("placeholder", review_placeholder);

      });
      
      var update_item_company = function(company){
        $("#company_name").val(company.name);
        $("#item_company_id").val(company.id);
        $("#company_name").attr("readonly", "readonly");
      };

      #{ render "items/company_autocomplete.js" }
      
    });
