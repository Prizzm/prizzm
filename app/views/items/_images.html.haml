#gallery.content
  .slideshow-container
    #loading.loader
    #slideshow.slideshow
%div(style="clear: both;")

/ 
  As the delete image URL changes through javascript depending on which image we're looking at, 
  we can't have the url rendered on the page, but must suply it based on the current image.
  So we will do that by using javascript
- if (@item.images.count > 0) && (@item.user == current_user)
  %br/
  = link_to "Delete", '#', :id => 'delete-image-link', :remote => true, :method => :delete, :'data-type' => :json, :class => "button"

- content_for :jquery do
  :javascript
    $(document).ready(function(){
      $('#delete-image-link').live('ajax:success', function(event, data, status, xhr){
        var index = data + ''; 
        $('body').trigger('removeImage', index);
      });
      
      // Custom helper functions for Gallery

      var setDeleteImageLink = function(index){
        var itemId = $('#thumbs').data('itemid');
        var imageId = $('#thumbs ul li').eq(index).data('imageid');
        $('#delete-image-link').attr('href', '/items/' + itemId + '/images/'+imageId+'/index/'+index);
      }

      // End Custom Functions
      //-------------------------------------

      // We only want these styles applied when javascript is enabled
      $('div.navigation').css({'width' : '300px', 'float' : 'left'});
      $('div.content').css('display', 'block');

      // Initially set opacity on thumbs and add
      // additional styling for hover effect on thumbs
      var onMouseOutOpacity = 0.67;
      $('#thumbs ul.thumbs li').opacityrollover({
          mouseOutOpacity:   onMouseOutOpacity,
          mouseOverOpacity:  1.0,
          fadeSpeed:         'fast',
          exemptionSelector: '.selected'
      });

      // Enable toggling of the caption
      var captionOpacity = 0.0;
      $('#captionToggle a').click(function(e) {
        var link = $(this);
        
        var isOff = link.hasClass('off');
        var removeClass = isOff ? 'off' : 'on';
        var addClass = isOff ? 'on' : 'off';
        var linkText = isOff ? 'Hide Caption' : 'Show Caption';
        captionOpacity = isOff ? 0.7 : 0.0;

        link.removeClass(removeClass).addClass(addClass).text(linkText).attr('title', linkText);
        $('#caption span.image-caption').fadeTo(1000, captionOpacity);
        
        e.preventDefault();
      });

      // Initialize Advanced Galleriffic Gallery
      var gallery = $('#thumbs').galleriffic({
          delay:                     2500,
          numThumbs:                 6,
          preloadAhead:              10,
          enableTopPager:            true,
          enableBottomPager:         true,
          maxPagesToShow:            7,
          imageContainerSel:         '#slideshow',
          controlsContainerSel:      '#controls',
          captionContainerSel:       '#caption',
          loadingContainerSel:       '#loading',
          renderSSControls:          false,
          renderNavControls:         true,
          playLinkText:              'Play Slideshow',
          pauseLinkText:             'Pause Slideshow',
          prevLinkText:              '&lsaquo; Previous Photo',
          nextLinkText:              'Next Photo &rsaquo;',
          nextPageLinkText:          'Next &rsaquo;',
          prevPageLinkText:          '&lsaquo; Prev',
          enableHistory:             true,
          enableKeyboardNavigation: false, 
          autoStart:                 false,
          syncTransitions:           true,
          defaultTransitionDuration: 900,
          onSlideChange:             function(prevIndex, nextIndex) {
              // 'this' refers to the gallery, which is an extension of $('#thumbs')
              this.find('ul.thumbs').children()
                  .eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
                  .eq(nextIndex).fadeTo('fast', 1.0);
              //nextIndex is the array index image we're changing to
              //prevIndex is the array index of the image that we're leaving
              setDeleteImageLink(nextIndex);
          },
          onTransitionOut:           function(slide, caption, isSync, callback) {
            slide.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0, callback);
            caption.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0);
          },
          onTransitionIn:            function(slide, caption, isSync) {
            var duration = this.getDefaultTransitionDuration(isSync);
            slide.fadeTo(duration, 1.0);
            
            // Position the caption at the bottom of the image and set its opacity
            var slideImage = slide.find('img');
            caption.width(slideImage.width())
              .css({
                'bottom' : Math.floor((slide.height() - slideImage.outerHeight()) / 2),
                'left' : Math.floor((slide.width() - slideImage.width()) / 2) + slideImage.outerWidth() - slideImage.width()
              })
              .fadeTo(duration, captionOpacity);
          },
          onPageTransitionOut:       function(callback) {
              this.fadeTo('fast', 0.0, callback);
          },
          onPageTransitionIn:        function() {
              this.fadeTo('fast', 1.0);
          },
          onImageAdded:              function(imageData, $li) {
            $li.opacityrollover({
              mouseOutOpacity:   onMouseOutOpacity,
              mouseOverOpacity:  1.0,
              fadeSpeed:         'fast',
              exemptionSelector: '.selected'
            });
          }
      });

      /********************** Attach click event to the Add Image Link ************************/
      $('body').live('insertImage', function(event, element) {
        gallery.appendImage(element);
      });

      $('body').live('removeImage', function(event, index) {
        gallery.removeImageByIndex(index);
        var nextImage = gallery.getPrevIndex(index);
        //var nextImage = index-1;
        gallery.gotoIndex(nextImage);
      });


      /**** Functions to support integration of galleriffic with the jquery.history plugin ****/

      // PageLoad function
      // This function is called when:
      // 1. after calling $.historyInit();
      // 2. after calling $.historyLoad();
      // 3. after pushing "Go Back" button of a browser
      function pageload(hash) {
          // alert("pageload: " + hash);
          // hash doesn't contain the first # character.
          if(hash) {
              $.galleriffic.gotoImage(hash);
          } else {
              gallery.gotoIndex(0);
          }
      }

      // Initialize history plugin.
      // The callback is called at once by present location.hash. 
      $.historyInit(pageload, "advanced.html");

      // set onlick event for buttons using the jQuery 1.3 live method
      $("a[rel='history']").live('click', function(e) {
          if (e.button != 0) return true;
          
          var hash = this.href;
          hash = hash.replace(/^.*#/, '');

          // moves to a new page. 
          // pageload is called at once. 
          // hash don't contain "#", "?"
          $.historyLoad(hash);

          return false;
      });

      /****************************************************************************************/

    });


