%h1.grid_2
  = link_to 'Prizzm'
= form_tag '', :class => "grid_6" do
  = text_field_tag :search, nil, :class => "jq_watermark grid_6", :id => "product-search-input", :title => "Keywords, Tags, Items, SKU..."
  = submit_tag "ADD NEW ITEM", :id => 'product-search-submit-button', :style => 'display: none'
- if signed_in?
  %nav.grid_4
    %ul
      %li= link_to 'Dashboard', home_url, :class => "active"
      %li= link_to 'Browse'

%script(type="text/html" id="product-autocomplete-result-template")
  .product-autocomplete-result
    .cell.img
      %img(src='{{ main_image_thumb }}')
    .cell
      %h2= link_to '{{ label }}', CGI::unescape(product_path('{{ id }}'))
      .clear
      = link_to '{{ customer_count }} people have this', '#'
      %div{:id => "stars-wrapper-{{ id }}", :class => "autocomplete-rating rating", :disabled => "disable"}
        %select= options_for_select([1, 2, 3, 4, 5])
    .cell 
      = link_to "I have this", CGI::unescape(add_owned_item_path('{{ id }}')), :method => :post, :class => "button"
      = link_to "I want this", CGI::unescape(add_wanted_item_path('{{ id }}')), :method => :post, :class => "button"

%script(src="http://yui.yahooapis.com/3.3.0/build/yui/yui-min.js" charset="utf-8")
:javascript

  function autocompleteFormatter(query, results) {
    var template = document.getElementById('product-autocomplete-result-template').innerHTML;
    
    return _.map(results, function(result){
      var product = result.raw;
      var parsed_template = _.template(template, product);
      var target_option = 'value="' + product.rating + '"';    
      var selected_option = target_option + ' selected="selected"';
      var autocomplete_html = parsed_template.replace(target_option, selected_option);
      return $(autocomplete_html).stars().html();
    });
  }


  YUI().use('autocomplete', 'autocomplete-highlighters', function(Y){
    Y.one('body').addClass('yui3-skin-sam');

    var inputNode = Y.one('#product-search-input');

    inputNode.plug(Y.Plugin.AutoComplete, {
      resultHighlighter: 'phraseMatch',
      source: "#{search_products_path}?query={query}",
      queryDelay: 50,
      activateFirstItem: true,
      resultFormatter: autocompleteFormatter,
      resultTextLocator: 'label'
    });

    inputNode.ac.on('select', function(event){
      console.log($.dump(event));
    });

    inputNode.ac.on('results', function(event){
        if (event.results.length < 1) {
          $('#product-search-submit-button').show();
        } else {
          $('#product-search-submit-button').hide();
        }
    });


  });

