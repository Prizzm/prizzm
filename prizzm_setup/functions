#!/bin/bash
# /* vim: set filetype=sh : */   
#
## Heroku command shortcuts
# Taken from comments here:
# http://jqr.github.com/2010/08/27/easy-heroku-deploys-with-heroku-san.html
#
# Example usage:
#
#     development db:push
#
#     Pushes the local db to the development server
function kill_all_ruby_processes(){
  echo "${alert} Killing all ruby processes'${txtrst}..."
  ps ux | grep ruby | grep -v 'grep ruby' | awk '{print $2}' | xargs kill -9 &> /dev/null
}
alias kar='kill_all_ruby_processes'

 
function db() {
    action="${1:?Usage: 'db push server' or 'db pull server'}"
    server=${2:-development}

    case "$server" in
    dev )
        server=development
        ;;
    development )
        ;;
    demo )
        ;;
    * )
        echo "${bldred}You shouldn't be deploying to $server ${txtrst}"
        return 1;
        ;;
    esac

    case "$action" in
    push )
        echo "${alert} Pushing database to prizzm-$server ${txtrst}..."
        ;;
    pull )
        echo "${alert} Pulling database from prizzm-$server ${txtrst}..."
        ;;
    * )
        echo "${bldred} Invalid command. What are you trying to do here? ${txtrst}"
        return 1;
        ;;
    esac
    heroku db:$action --app prizzm-$server postgres://prizzm:prizzm@127.0.0.1/prizzm_$server --confirm prizzm-$server
}

function deploy() {
  server=${1:-development}
  echo "${alert} Compiling css with 'compass compile .'${txtrst}..."
  compass compile .
  
  echo "${alert} Packaging assets with 'jammit'${txtrst}..."
  jammit  

  # Need to add line to remove these commits from history..using autosquash
  git add public/assets
  git commit -m "Deploment - predeploy script..."
 
  echo "${alert} Deploying code to heroku${txtrst}..."
  rake $server deploy  && git push origin master

  if [ $? -ne 0 ]; then
    echo "${bldred} Don't forget to push your changes to github! ${alert}'git push origin master'${txtrst}"
  else
    echo "${bldylw} Your code has been synchronized with GitHub${txtrst}"
  fi

}
alias dep='deploy'

function release() {
  server=${1:-development}
  kill_all_ruby_processes

  echo "${alert} Rebuilding database from scratch with seed data'${txtrst}..."
  rds

  db push $server
  deploy $server
}
alias rel='release'



function staging() { heroku $@ --app $(basename `pwd`)-staging ;}
function production() { heroku $@ --app $(basename `pwd`)-production ;}
function demo() { heroku $@ --app $(basename `pwd`)-demo ;}
function development() { heroku $@ --app $(basename `pwd`)-development ;}
alias stage='staging'
alias dev='development'
alias prod='production'


function find_and_replace  {
# Usage: find_and_replace $target $replacement
#
# Recursively search the files in the child directories for the target string,
# and replace the target string in place with replacement
#
# Improvements:  Could pass options to ack to improve filetypes searched

    target=$1
    replacement=$2
    ack -l $target | xargs -n 1 sed -i "s/$target/$replacement/g"
}




