<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeTask description="Select all Heroku apps for later command" fullCmd="all" taksId="all" /><RakeTask description="This task is called by the Heroku cron add-on" fullCmd="cron" taksId="cron" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Create the database from config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="data"><RakeTask description="Dump contents of database to db/data.extension (defaults to yaml)" fullCmd="db:data:dump" taksId="dump" /><RakeTask description="Dump contents of database to curr_dir_name/tablename.extension (defaults to yaml)" fullCmd="db:data:dump_dir" taksId="dump_dir" /><RakeTask description="Load contents of db/data.extension (defaults to yaml) into database" fullCmd="db:data:load" taksId="load" /><RakeTask description="Load contents of db/data_dir into database" fullCmd="db:data:load_dir" taksId="load_dir" /></RakeGroup><RakeTask description="Drops the database for the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeTask description="Dump schema and data to db/schema.rb and db/data.yml" fullCmd="db:dump" taksId="dump" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Load schema and data from db/schema.rb and db/data.yml" fullCmd="db:load" taksId="load" /><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to an SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:rebuild" taksId="rebuild" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeTask description="Select demo Heroku app for later commands" fullCmd="demo" taksId="demo" /><RakeTask description="Select development Heroku app for later commands" fullCmd="development" taksId="development" /><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also availble doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeTask description="Generate an Entity-Relationship Diagram based on your models" fullCmd="erd" taksId="erd" /><RakeGroup description="" fullCmd="" taksId="forgery"><RakeTask description="Create a dictionary file from web content (xml or html)" fullCmd="forgery:create_dictionary[dictionary_name,source_url,css_or_xpath]" taksId="create_dictionary[dictionary_name,source_url,css_or_xpath]" /><RakeTask description="" fullCmd="forgery:create_dictionary" taksId="create_dictionary" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Lists configured apps" fullCmd="heroku:apps" taksId="apps" /><RakeTask description="Captures a bundle on Heroku" fullCmd="heroku:capture" taksId="capture" /><RakeTask description="Opens a remote console" fullCmd="heroku:console" taksId="console" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Migrates and restarts remote servers" fullCmd="heroku:db:migrate" taksId="migrate" /><RakeTask description="Pulls the database from heroku and stores it into db/dumps/" fullCmd="heroku:db:pull" taksId="pull" /></RakeGroup><RakeTask description="Deploys, migrates and restarts latest code" fullCmd="heroku:deploy" taksId="deploy" /><RakeTask description="Force deploys, migrates and restarts latest code" fullCmd="heroku:force_deploy" taksId="force_deploy" /><RakeTask description="Get remote server information on the heroku app" fullCmd="heroku:info" taksId="info" /><RakeTask description="Shows the Heroku logs" fullCmd="heroku:logs" taksId="logs" /><RakeTask description="Add git remotes for all apps in this project" fullCmd="heroku:remotes" taksId="remotes" /><RakeTask description="Restarts remote servers" fullCmd="heroku:restart" taksId="restart" /><RakeTask description="Setup Heroku deploy environment from heroku.yml config" fullCmd="heroku:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="Setup the Heroku addons from heroku.yml config" fullCmd="heroku:setup:addons" taksId="addons" /><RakeTask description="Creates the apps on Heroku" fullCmd="heroku:setup:apps" taksId="apps" /><RakeTask description="Setup the Heroku collaborators from heroku.yml config" fullCmd="heroku:setup:collaborators" taksId="collaborators" /><RakeTask description="Setup the Heroku environment config variables from heroku.yml config" fullCmd="heroku:setup:config" taksId="config" /><RakeTask description="Setup the Heroku domains from heroku.yml config" fullCmd="heroku:setup:domains" taksId="domains" /><RakeTask description="Setup the Heroku stacks from heroku.yml config" fullCmd="heroku:setup:stacks" taksId="stacks" /></RakeGroup><RakeTask description="" fullCmd="heroku:after_deploy" taksId="after_deploy" /><RakeTask description="" fullCmd="heroku:after_each_deploy" taksId="after_each_deploy" /><RakeTask description="" fullCmd="heroku:before_deploy" taksId="before_deploy" /><RakeTask description="" fullCmd="heroku:before_each_deploy" taksId="before_each_deploy" /><RakeTask description="" fullCmd="heroku:switch_environment" taksId="switch_environment" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="hoptoad"><RakeTask description="Notify Hoptoad of a new deploy" fullCmd="hoptoad:deploy" taksId="deploy" /><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Install Heroku deploy notifications addon" fullCmd="hoptoad:heroku:add_deploy_notification" taksId="add_deploy_notification" /></RakeGroup><RakeTask description="Verify your gem installation by sending a test exception to the hoptoad service" fullCmd="hoptoad:test" taksId="test" /><RakeTask description="" fullCmd="hoptoad:log_stdout" taksId="log_stdout" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeTask description="Select production Heroku app for later commands" fullCmd="production" taksId="production" /><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=/path/to/template" fullCmd="rails:template" taksId="template" /><RakeTask description="Update both configs and public/javascripts from Rails (or use just update:javascripts or update:configs)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run all specs with rcov" fullCmd="spec:rcov" taksId="rcov" /><RakeTask description="Run the code examples in spec/requests" fullCmd="spec:requests" taksId="requests" /><RakeTask description="Run the code examples in spec/routing" fullCmd="spec:routing" taksId="routing" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Select staging Heroku app for later commands" fullCmd="staging" taksId="staging" /><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="console" taksId="console" /><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="deploy" taksId="deploy" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeGroup description="" fullCmd="" taksId="erd"><RakeTask description="" fullCmd="erd:generate" taksId="generate" /><RakeTask description="" fullCmd="erd:load_models" taksId="load_models" /><RakeTask description="" fullCmd="erd:options" taksId="options" /></RakeGroup><RakeTask description="" fullCmd="logs" taksId="logs" /><RakeTask description="" fullCmd="noop" taksId="noop" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /><RakeTask description="" fullCmd="restart" taksId="restart" /><RakeTask description="" fullCmd="setup" taksId="setup" /><RakeTask description="" fullCmd="yuml_erd" taksId="yuml_erd" /></RakeGroup></Settings>
